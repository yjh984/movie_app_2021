{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movies","year","rating","title","genres","summary","poster","className","src","alt","map","item","index","slice","prototype","id","PropTypes","number","isRequired","string","arrayOf","searchYear","Date","getFullYear","App","state","isLoading","isMovie","isYear","moviesList","getMoviesList","a","axios","get","undefined","movies","data","setState","handleBtnMinusYear","handleBtnAddYear","handleBtnAllList","handleBtnBackToYear","this","onClick","parseFloat","toFixed","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6SAIA,SAASA,EAAT,GAAgE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,OAQnD,OAAQ,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKF,EAAQG,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,qBAAII,UAAU,cAAd,UAA6BN,EAA7B,MAAsCC,KACtC,oBAAIK,UAAU,gBAAd,SACKH,EAAOM,KAAI,SAACC,EAAMC,GAAP,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAIjB,oBAAGL,UAAU,iBAAb,UAA+BF,EAAQQ,MAAM,EAAE,KAA/C,eAMpBb,EAAOc,UAAU,CACbC,GAAIC,IAAUC,OAAOC,WACrBjB,KAAMe,IAAUC,OAAOC,WACvBhB,OAAQc,IAAUC,OAClBd,MAAOa,IAAUG,OAAOD,WACxBd,OAAQY,IAAUI,QAAQJ,IAAUG,QAAQD,WAC5Cb,QAASW,IAAUG,OAAOD,WAC1BZ,OAAQU,IAAUG,OAAOD,YAGdlB,QClCXqB,G,OAAa,IAAIC,MAAOC,eA+FbC,E,4MA5FbC,MAAO,CACLC,WAAW,EACXC,SAAS,EACTC,QAAQ,EACRC,WAAY,I,EAGdC,c,sBAAgB,8BAAAC,EAAA,sEAGRC,IAAMC,IAAN,+DAAkEZ,EAAlE,oBAHQ,qBAMFa,KAJOC,EAFL,EAEPC,KAAMA,KAAMD,QAKjB,EAAKE,SAAS,CAACX,WAAU,EAAOC,SAAS,EAAOE,WAAYM,IAE5D,EAAKE,SAAS,CAACX,WAAU,EAAOC,SAAS,EAAME,WAAYM,IAT/C,2C,EAiBhBG,mBAAmB,WACjB,EAAKD,SAAS,CAACX,WAAU,IACzBL,GAAwB,EACxB,EAAKS,iB,EAGPS,iBAAiB,WACf,EAAKF,SAAS,CAACX,WAAU,IACzBL,GAAwB,EACxB,EAAKS,iB,EAGPU,iBAAiB,WACf,EAAKH,SAAS,CAACX,WAAU,EAAME,QAAO,IACtCP,EAAa,GACb,EAAKS,iB,EAGPW,oBAAoB,WAClB,EAAKJ,SAAS,CAACX,WAAU,EAAME,QAAO,IACtCP,GAAa,IAAIC,MAAOC,cACxB,EAAKO,iB,kEAxBLY,KAAKZ,kB,+BA2BE,IAAD,EAC2CY,KAAKjB,MAA/CC,EADD,EACCA,UAAWE,EADZ,EACYA,OAAQD,EADpB,EACoBA,QAASE,EAD7B,EAC6BA,WACnC,OACE,0BAAStB,UAAU,YAAnB,UACE,sBAAKA,UAAU,QAAf,UACGmB,EAAW,GACVE,EAAS,uCAAUP,EAAV,OAA+B,2CAC1C,gCACCK,EAAW,GACVE,EAAS,wBAAQe,QAASD,KAAKJ,mBAAtB,2BAAoE,GAC9EZ,EAAW,GACVE,EAAS,wBAAQe,QAASD,KAAKH,iBAAtB,uBAA8D,MAEzE,gCACCb,EAAW,GAAM,wBAAQiB,QAASD,KAAKF,iBAAtB,wBACjBd,EAAW,GAAM,wBAAQiB,QAASD,KAAKD,oBAAtB,qCAInBf,EACC,qBAAKnB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,8CAEDoB,EACE,qBAAKpB,UAAU,SAAf,SACAsB,EAAWnB,KAAI,SAAAC,GAEJ,OAAO,cAAC,EAAD,CACOI,GAAIJ,EAAKI,GACTd,KAAMU,EAAKV,KACXC,OAAQ0C,WAAWjC,EAAKT,QAAQ2C,QAAQ,GACxC1C,MAAOQ,EAAKR,MACZC,OAAQO,EAAKP,OACbC,QAASM,EAAKN,QACdC,OAAQK,EAAKmC,oBAPPnC,EAAKI,SASrC,2E,GArFMgC,IAAMC,WCHxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.90d8ad72.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movies.css';\r\n\r\nfunction Movies({year, rating, title, genres, summary, poster}){\r\n    // let genresSlash='';\r\n    // genres.forEach(item=>{\r\n    //     genresSlash = genresSlash+item + '/';\r\n    // })\r\n    // console.log(genresSlas.substr(genresSlash));\r\n    // genresSlash=genresSlash.slice(0,genresSlash.length-1);\r\n\r\n    return (<div className='movie'>\r\n                <img src={poster} alt={title} title={title}/>\r\n                <div className='movie__data'>\r\n                    <h2 className='movie__title'>{title}</h2>\r\n                    <h4 className='movie__year'>{year} / {rating}</h4>\r\n                    <ul className='movie__genres'>\r\n                        {genres.map((item, index)=> (\r\n                            <li key={index} className='genres__genre'>{item}</li> )\r\n                        ) }    \r\n                    </ul>\r\n                    {/* <h4 className='movie__genres'>{genresSlash}</h4> */}\r\n                    <p className='movie__summary'>{summary.slice(0,300)}...</p>\r\n                </div>\r\n            </div>\r\n            );\r\n}\r\n\r\nMovies.prototype={\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    rating: PropTypes.number,\r\n    title: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movies;","import React from 'react';\nimport axios from 'axios';\nimport Movies from './Movies';\nimport './App.css';\n\nlet searchYear = new Date().getFullYear();\n\nclass App extends React.Component{\n  state ={\n    isLoading: true,\n    isMovie: false,\n    isYear: true,\n    moviesList: []\n  }\n  \n  getMoviesList = async () =>{\n    // console.log(searchYear);\n    const {data:{data:{movies}}} = \n    await axios.get(`https://yts-proxy.now.sh/list_movies.json?query_term=${searchYear}&sort_by=rating`);\n    // await axios.get('https://yts-proxy.now.sh/list_movies.json?query_term=\"2021\"&sort_by=rating');\n    // console.log(movies==undefined);\n    if(movies===undefined) {\n      this.setState({isLoading:false, isMovie: false, moviesList: movies });\n    } else{\n      this.setState({isLoading:false, isMovie: true, moviesList: movies });\n    }\n  }\n\n  componentDidMount(){\n    this.getMoviesList();\n  }\n\n  handleBtnMinusYear=()=>{\n    this.setState({isLoading:true});\n    searchYear = searchYear-1;\n    this.getMoviesList();\n  }\n\n  handleBtnAddYear=()=>{\n    this.setState({isLoading:true});\n    searchYear = searchYear+1;\n    this.getMoviesList();\n  }\n\n  handleBtnAllList=()=>{\n    this.setState({isLoading:true, isYear:false});\n    searchYear = \"\";\n    this.getMoviesList();\n  }\n\n  handleBtnBackToYear=()=>{\n    this.setState({isLoading:true, isYear:true});\n    searchYear = new Date().getFullYear();\n    this.getMoviesList();\n  }\n\n  render(){\n    const {isLoading, isYear, isMovie, moviesList} = this.state;\n    return (\n      <section className='container'>\n        <div className='front'>\n          {isLoading? '' : \n            isYear? (<h1>YEAR {searchYear}.</h1>) : <h1>All YEAR.</h1>}\n          <div>\n          {isLoading? '' : \n            isYear? (<button onClick={this.handleBtnMinusYear}>Previous Year</button>) : \"\"}\n          {isLoading? '' : \n            isYear? (<button onClick={this.handleBtnAddYear}>Next Year</button>) : \"\"}\n          </div>\n          <div>\n          {isLoading? '' : (<button onClick={this.handleBtnAllList}>All Movies</button>)}\n          {isLoading? '' : (<button onClick={this.handleBtnBackToYear}>Back to this year</button>)}\n          </div>\n        </div>\n\n        {isLoading ? \n          <div className='loader'>\n            <span className='loader__text'>'Please, wait for loading...' </span>\n          </div>: \n          (isMovie ? \n            (<div className='movies'>\n            {moviesList.map(item =>{\n            // console.log(item.title);\n                        return <Movies key={item.id}\n                                      id={item.id}\n                                      year={item.year}\n                                      rating={parseFloat(item.rating).toFixed(1)}\n                                      title={item.title}\n                                      genres={item.genres}\n                                      summary={item.summary}\n                                      poster={item.medium_cover_image} />})}\n            </div>):\n            <h4>There is no movie which you want..</h4>\n          )\n        }\n      </section>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}